#!/usr/bin/env ruby
require 'optparse'

options = {
  :chef_environment => 'qa'
}

@parser = OptionParser.new do |opts|
  opts.banner = <<EOL
chef_delete removes a server from an environment.  It terminates the ec2 instance and deletes chef client & node.

  Usage: chef_delete [options] node_name
EOL

  opts.on('-n', '--name [NAME]', "Node name to match") {|v| options[:name] = v }
  opts.on('-e', '--environment [ENV]', "Node chef-environment to match") {|v| options[:chef_environment] = v }
  opts.on_tail("-h", "--help", "Show this message") do
    puts opts
    exit
  end
end
@parser.parse!(ARGV)

def usage_error(error)
  puts "ERROR: #{error}\n\n"
  puts @parser
  exit 1
end

options[:chef_environment]  ||= ARGV.pop
usage_error('chef_environment required!') unless options[:chef_environment]
options[:name]              ||= ARGV.shift
usage_error('name required!') unless options[:name]

system("cd /work/chef; env CHEF_ENV=#{options[:chef_environment]} knife ec2 server delete `chef_instance_id #{ options[:name] }` -E #{options[:chef_environment]}")
system("cd /work/chef; env CHEF_ENV=#{options[:chef_environment]} knife client delete #{ options[:name] } -E #{options[:chef_environment]}")
system("cd /work/chef; env CHEF_ENV=#{options[:chef_environment]} knife node delete #{ options[:name] } -E #{options[:chef_environment]}")
