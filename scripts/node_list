#!/usr/bin/env ruby

require 'optparse'
options = {
  :attribute => 'ec2.public_hostname'
}

parser = OptionParser.new do |opts|
  opts.banner = <<EOL
node_list wraps knife search node w/ a nicer interface

  Usage: node_list [options] [role] [env]
EOL

  opts.on('-r', '--role [ROLE]', "Node Role to match") {|v| options[:role] = v }
  opts.on('-e', '--environment [ENV]', "Node chef-environment to match") {|v| options[:chef_environment] = v }
  opts.on('-a', '--attribute <attr>', "Node attribute to show") {|v| options[:attribute] = v }
  opts.on_tail("-h", "--help", "Show this message") do
    puts opts
    exit
  end
end
parser.parse!(ARGV)

options[:chef_environment]  ||= ARGV.pop
role = ARGV.shift
options[:role]              ||= role if role

filter_attrs = (options.keys - [:attribute]).select {|k| options[k] }
filters = filter_attrs.map {|option| "#{option}:#{options[option]}" }
unless filters.any?
  puts "ERROR: Must specify one or more node filters"
  puts parser
  exit 1
end

system("env CHEF_ENV=#{options[:chef_environment]} knife search node '#{ filters.join(' AND ') }' -a #{ options[:attribute] }")
